__NUXT_JSONP__("/de/resources/modules/okewointegration", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v){return {data:[{article:{slug:"okewointegration",description:i,title:i,category:f,categoryIcon:g,position:99,toc:[{id:l,depth:2,text:m}],body:{type:"root",children:[{type:c,tag:j,props:{source:"https:\u002F\u002Fraw.githubusercontent.com\u002Fit-at-m\u002Fdigiwf-ok.ewo-integration\u002Fdev\u002Fdocs\u002Fquickstart.md"},children:[{type:a,value:d}]},{type:a,value:n},{type:c,tag:j,props:{source:"https:\u002F\u002Fraw.githubusercontent.com\u002Fit-at-m\u002Fdigiwf-ok.ewo-integration\u002Fdev\u002Fdocs\u002Farchitecture.md"},children:[{type:a,value:d}]},{type:a,value:n},{type:c,tag:j,props:{source:"https:\u002F\u002Fraw.githubusercontent.com\u002Fit-at-m\u002Fdigiwf-ok.ewo-integration\u002Fdev\u002Fdocs\u002Fdocumentation.md"},children:[{type:a,value:d}]},{type:a,value:d},{type:c,tag:"h2",props:{id:l},children:[{type:c,tag:"a",props:{ariaHidden:"true",href:"#element-templates",tabIndex:-1},children:[{type:c,tag:"span",props:{className:["icon","icon-link"]},children:[]}]},{type:a,value:m}]},{type:a,value:d},{type:c,tag:"dwf-element-template-docs",props:{jsonurl:"https:\u002F\u002Fraw.githubusercontent.com\u002Fit-at-m\u002Fdigiwf-ok.ewo-integration\u002Fdev\u002Fdocs\u002FokEwoIntegration.json"},children:[{type:a,value:d}]}]},dir:"\u002Fde\u002Fresources\u002Fmodules",path:o,extension:".md",createdAt:p,updatedAt:p},navigation:[{title:q,category:f,categoryIcon:g,path:r},{title:i,category:f,categoryIcon:g,path:o},{title:s,category:f,categoryIcon:g,path:t}],prev:{title:q,path:r},next:{title:s,path:t}}],fetch:{"DwfMarkdownLoader:0":{markdown:"## Getting started\n\nBelow is an example of how you can install and set up your service.\n\n1. Use the spring initializer and create a Spring Boot application with `Spring Web`\n   dependencies [https:\u002F\u002Fstart.spring.io](https:\u002F\u002Fstart.spring.io)\n2. Add the `digiwf-okewo-integration-starter` dependency.\n\nWith Maven:\n\n```\n   \u003Cdependency\u003E\n        \u003CgroupId\u003Eio.muenchendigital.digiwf\u003C\u002FgroupId\u003E\n        \u003CartifactId\u003Edigiwf-okewo-integration-starter\u003C\u002FartifactId\u003E\n        \u003Cversion\u003E${version}\u003C\u002Fversion\u003E\n   \u003C\u002Fdependency\u003E\n```\n\nWith Gradle:\n\n```\nimplementation group: 'io.muenchendigital.digiwf', name: 'digiwf-okewo-integration-starter', version: '${version}'\n```\n\n4. Configure your application\n\n```yaml\nio.muenchendigital.digiwf.okewo:\n  url: \u003CURL\u003E\n  username: \u003CUSERNAME\u003E\n  password: \u003CPASSWORD\u003E\n  benutzerId: \u003CBENUTZER_ID\u003E\n```\n\n5. Use the repository beans\n\nTo request the OK.EWO rest api, the methods of the following listed spring beans can be used.\n\n* `OkEwoPersonRepository`\n* `OkEwoPersonErweitertRepository`\n"},"DwfMarkdownLoader:1":{markdown:"## Architecture\n\ntbd\n\n"},"DwfMarkdownLoader:2":{markdown:"## Documentation\n\nBasically, two artifacts are available.\nThis is on the one hand the Spring-Boot-Starter `digiwf-okewo-integration-starter`\nand on the other hand the service `digiwf-okewo-integration-service` which is provided as an\n[Image](https:\u002F\u002Fhub.docker.com\u002Frepository\u002Fdocker\u002Fitatm\u002Fdigiwf-okewo-integration-service).\n\n### Spring-Boot-Starter\n\nThe usage of the starter is documented\nin [quickstart.md](https:\u002F\u002Fgithub.com\u002Fit-at-m\u002Fdigiwf-ok.ewo-integration#getting-started).\n\n#### Error handling\n\nThe errors occurring during the rest request are divided into three error categories.\nThese are client-side errors, server-side errors and errors that cannot be assigned to either the client or the server.\nEach of these three error categories is assigned its own exception, which is then thrown when the methods in the\nrepository classes `OkEwoPersonRepository` and `OkEwoPersonErweitertRepository` are called.\n\n### Service provided as an image\n\nThe service is provided via Dockerhub as\nan [Image](https:\u002F\u002Fhub.docker.com\u002Frepository\u002Fdocker\u002Fitatm\u002Fdigiwf-okewo-integration-service).\nThe source code for the service can be found in\nsubmodule [digiwf-okewo-integration-service](https:\u002F\u002Fgithub.com\u002Fit-at-m\u002Fdigiwf-ok.ewo-integration\u002Ftree\u002Fdev\u002Fdigiwf-okewo-integration-service)\n.\n\nThe requests to OK.EWO are expected by the service over kafka event bus messages.\nTo provide the event bus functionality via kafka,\nthe [DigiWF Spring Cloudstream Utils](https:\u002F\u002Fgithub.com\u002Fit-at-m\u002Fdigiwf-spring-cloudstream-utils) are used.\n\n#### Service Configuration\n\nAn example configuration can be found within the properties files.\n\n* `application.yml`: `digiwf-okewo-integration-service\u002Fsrc\u002Fmain\u002Fresources\u002Fapplication.yml`\n* `application-local.yml`: `digiwf-okewo-integration-service\u002Fsrc\u002Fmain\u002Fresources\u002Fapplication.yml`\n\nThe file `application.yml` contains the configuration according graceful shutdown, metrics, ports, ...\n\nThe file `application-local.yml` provides the event bus and OK.EWO relevant configuration.\nThe event bus configuration is implemented\naccording [DigiWF Spring Cloudstream Utils](https:\u002F\u002Fgithub.com\u002Fit-at-m\u002Fdigiwf-spring-cloudstream-utils#getting-started).\n\n#### Service API usage\n\nThe OK.EWO requests have to be made via the element template defined in `okEwoIntegration.json`.\nThe service and the template are providing four types of requests.\nThe request type can be defined via the element template dropdown in field `Event Type`.\n\n* `getPerson`\n* `searchPerson`\n* `getPersonErweitert`\n* `searchPersonErweitert`\n\nFor each request type, the payload has to be defined in the element templates request field as a JSON object.\nThe response is also an JSON object.\nA crucial and mandatory JSON object attribute for a request is `eventType`.\nThis attribute is necessary for correct deserialization of the requests JSON payload within the integration service.\n\nThe date and time information within the request and response payloads are provided in ISO standard.\n\n##### getPerson\n\nGets a Person on the basis of an Ordnungsmerkmal.\n\nThe following JSON object shows the example payload set at the element templates request field.\n\n```yaml\n{\n  \"eventType\": \"getPerson\",\n  \"ordnungsmerkmal\": \"99\"\n}\n```\n\n##### searchPerson\n\nSearches Persons based on search parameters.\n\nThe following JSON object shows the example payload set at the element templates request field.\nThe search parameters within JSON object allocated to JSON key `searchPerson` are optional,\nif parameters are not needed, they can be omitted.\n\n```yaml\n{\n  \"eventType\": \"searchPerson\",\n  \"searchPerson\": {\n    \"benutzer\": {\n      \"benutzerId\": \"enim nostrud\"\n    },\n    \"suchkriterien\": {\n      \"datensatzstatus\": \"AKTUELL\",\n      \"familienname\": \"veniam elit cupidatat nostrud\",\n      \"geburtsdatum\": {\n        \"datum\": \"proident Ut quis\"\n      },\n      \"geschlecht\": \"esse enim\",\n      \"vorname\": \"aute eu laboris\",\n      \"buchstabeVon\": \"tempor\",\n      \"buchstabeBis\": \"non ipsum nostrud\",\n      \"hausnummerVon\": \"in laboris dolore et ipsum\",\n      \"hausnummerBis\": \"in sed commodo consectetur\",\n      \"strassenschluessel\": \"nulla minim esse pariatur\",\n      \"teilnummerVon\": \"incididunt anim\",\n      \"teilnummerBis\": \"labore incididunt laboris id\",\n      \"wohnort\": \"et incididunt\",\n      \"postleitzahl\": \"Ut mollit nisi\"\n    }\n  }\n}\n```\n\n##### getPersonErweitert\n\nGets a PersonErweitert on the basis of an Ordnungsmerkmal.\n\nThe following JSON object shows the example payload set at the element templates request field.\n\n```yaml\n{\n  \"eventType\": \"getPersonErweitert\",\n  \"ordnungsmerkmal\": \"99\"\n}\n```\n\n##### searchPersonErweitert\n\nSearches PersonErweitert based on search parameters.\n\nThe following JSON object shows the example payload set at the element templates request field.\nThe search parameters within JSON object allocated to JSON key `searchPersonErweitert` are optional,\nif parameters are not needed, they can be omitted.\n\n```yaml\n{\n  \"eventType\": \"searchPersonErweitert\",\n  \"searchPersonErweitert\": {\n    \"benutzer\": {\n      \"benutzerId\": \"esse sit laboris aliquip\"\n    },\n    \"suchkriterien\": {\n      \"datensatzstatus\": \"INAKTUELL\",\n      \"familienname\": \"dolore \",\n      \"geburtsdatum\": {\n        \"datum\": \"dolor ull\"\n      },\n      \"geschlecht\": \"ullamco amet voluptate\",\n      \"vorname\": \"proident\",\n      \"buchstabeVon\": \"non cupidatat\",\n      \"buchstabeBis\": \"in\",\n      \"hausnummerVon\": \"sint anim eiusmod\",\n      \"hausnummerBis\": \"Ut dolore fugiat\",\n      \"strassenschluessel\": \"officia Duis ut ut\",\n      \"teilnummerVon\": \"amet\",\n      \"teilnummerBis\": \"enim esse in aute\",\n      \"wohnort\": \"dolore fugiat\",\n      \"postleitzahl\": \"sed tempor qui nulla\",\n      \"ordnungsmerkmal\": \"nostrud qui aliqua\"\n    }\n  }\n}\n```\n\n#### Error handling\n\nIf client-side errors, server-side errors or errors that cannot be assigned to either the client or the server occur\nduring the rest request within the service, an error response is returned to the caller via the event bus.\n\n```yaml\n{\n  \"message\": \"THE GENERIC ERROR MESSAGE\"\n}\n```\n"},"DwfElementTemplateDocs:0":{elementtemplate:{name:"DigiWF OK EWO Integration",id:"de.muenchen.digitalwf.templates.digiwf-okewo-integration",appliesTo:["bpmn:CallActivity"],properties:[{label:"Template",type:e,editable:k,value:"StreamingTemplateV01",binding:{type:"property",name:"calledElement"}},{label:"Event Topic",type:e,value:u,binding:{type:h,expression:b,target:"app_topic_name"},constraints:{notEmpty:b}},{label:"Event Message",type:e,editable:k,value:"genericOkEwoEvent",binding:{type:h,expression:b,target:"app_message_name"},constraints:{notEmpty:b}},{label:"Type Header",type:e,value:u,choices:[{name:"Get Person on the basis of an Ordnungsmerkmal",value:"getPerson"},{name:"Search Person based on search parameters",value:"searchPerson"},{name:"Get PersonErweitert on the basis an Ordnungsmerkmal",value:"getPersonErweitert"},{name:"Search PersonErweitert based on search parameters",value:"searchPersonErweitert"}],binding:{type:h,expression:b,target:"app_type_name"},constraints:{notEmpty:b}},{label:"OK.EWO request as JSON object",type:e,value:"${request}",binding:{type:h,expression:b,target:"request"},constraints:{notEmpty:b}},{label:"OK.EWO response as JSON object",value:v,type:e,binding:{type:"camunda:out",source:v},constraints:{notEmpty:b}}],entriesVisible:{_all:k}}}},mutations:void 0}}("text",true,"element","\n","String","Integration Artifacts","mdi-toy-brick","camunda:in","OK.EWO Integration Artifact","dwf-markdown-loader",false,"element-templates","Element Templates","\n\n\n","\u002Fde\u002Fresources\u002Fmodules\u002Fokewointegration","2022-06-02T18:58:48.906Z","Integration Artifacts Übersicht","\u002Fde\u002Fresources\u002Fmodules\u002Fmodules","E-Mail Integration Artifact","\u002Fde\u002Fresources\u002Fmodules\u002Femailintegration","","response")));
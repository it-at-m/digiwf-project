__NUXT_JSONP__("/resources/tutorials/deploy-artifacts-to-digiwf-engine", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I){return {data:[{article:{slug:"deploy-artifacts-to-digiwf-engine",description:"Deployment of bpmn, dmn and jsonschema forms to the digiwf-engine with kafka",title:u,category:p,categoryIcon:q,position:v,toc:[{id:w,depth:v,text:x}],body:{type:"root",children:[{type:b,tag:i,props:{},children:[{type:a,value:"This tutorial should show you how to deploy artifacts (bpmn, dmn and jsonschema forms) to the digiwf-engine using the corresponding kafka topic.\nAdditionally, you can check out our documentation "},{type:b,tag:y,props:{to:z},children:[{type:a,value:"here"}]},{type:a,value:s}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"To integrate with the digiwf-engine you have to send events to the kafka topics the digiwf-engine listens to.\nInternally the digiwf-engine uses a custom spring cloud stream function router that routes the incoming events to the according topics based on the "},{type:b,tag:e,props:{},children:[{type:a,value:g}]},{type:a,value:" header.\nWith this approach the same topic can be used for different event types.\nThe supported event types are listed in the "},{type:b,tag:y,props:{to:z},children:[{type:a,value:"documentation"}]},{type:a,value:s}]},{type:a,value:f},{type:b,tag:"blockquote",props:{},children:[{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"Note: If you do not set the Header "},{type:b,tag:e,props:{},children:[{type:a,value:g}]},{type:a,value:" in your kafka messages the digiwf-engine cannot route the message to the suitable consumer function. This also applies if you set an unknown value for the "},{type:b,tag:e,props:{},children:[{type:a,value:g}]},{type:a,value:" header."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:"h2",props:{id:w},children:[{type:b,tag:"a",props:{href:"#artifact-deployment-bpmn-dmn-json-schema-and-process-configurations",ariaHidden:"true",tabIndex:-1},children:[{type:b,tag:c,props:{className:["icon","icon-link"]},children:[]}]},{type:a,value:x}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"To deploy artifacts to the digiwf-engine send a deployment event to the "},{type:b,tag:e,props:{},children:[{type:a,value:"dwf-cocreation-\u003CENV\u003E"}]},{type:a,value:" topic topic (replace the "},{type:b,tag:t,props:{},children:[{type:a,value:"ENV"}]},{type:a,value:" with a valid environment) with the header "},{type:b,tag:e,props:{},children:[{type:a,value:g}]},{type:a,value:" and the value "},{type:b,tag:e,props:{},children:[{type:a,value:"deploy"}]},{type:a,value:" for "},{type:b,tag:t,props:{},children:[{type:a,value:".bpmn"}]},{type:a,value:A},{type:b,tag:t,props:{},children:[{type:a,value:".dmn"}]},{type:a,value:" files. For json schema forms use the header "},{type:b,tag:e,props:{},children:[{type:a,value:g}]},{type:a,value:B},{type:b,tag:e,props:{},children:[{type:a,value:"deploySchema"}]},{type:a,value:". For process configurations use the header "},{type:b,tag:e,props:{},children:[{type:a,value:g}]},{type:a,value:B},{type:b,tag:e,props:{},children:[{type:a,value:"deployConfiguration"}]},{type:a,value:s}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"The deployment event consists of a unique "},{type:b,tag:e,props:{},children:[{type:a,value:"deploymentId"}]},{type:a,value:A},{type:b,tag:e,props:{},children:[{type:a,value:"versionId"}]},{type:a,value:". The "},{type:b,tag:e,props:{},children:[{type:a,value:"target"}]},{type:a,value:" represent the environment you deployed the event to. The "},{type:b,tag:e,props:{},children:[{type:a,value:"artifactType"}]},{type:a,value:" is either "},{type:b,tag:e,props:{},children:[{type:a,value:"BPMN"}]},{type:a,value:C},{type:b,tag:e,props:{},children:[{type:a,value:"DMN"}]},{type:a,value:C},{type:b,tag:e,props:{},children:[{type:a,value:"FORM"}]},{type:a,value:" or "},{type:b,tag:e,props:{},children:[{type:a,value:"CONFIGURATION"}]},{type:a,value:" and the "},{type:b,tag:e,props:{},children:[{type:a,value:"file"}]},{type:a,value:" is the file converted to string."}]},{type:a,value:f},{type:b,tag:"div",props:{className:["nuxt-content-highlight"]},children:[{type:b,tag:"pre",props:{className:["language-json","line-numbers"]},children:[{type:b,tag:e,props:{},children:[{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"{"}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\"deploymentId\""}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:m}]},{type:a,value:n},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"\"8d15da94-b4cb-43de-abb5-bca085af0da0\""}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:r}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\"versionId\""}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:m}]},{type:a,value:n},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"\"26326aa2-f3d4-4783-bbd8-7099d4bfd4a4\""}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:r}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\"target\""}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:m}]},{type:a,value:n},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"\"DEV\""}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:r}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\"file\""}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:m}]},{type:a,value:n},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"\"...\""}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:r}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\"artifactType\""}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:m}]},{type:a,value:n},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"\"BPMN\""}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"}"}]},{type:a,value:f}]}]}]}]},dir:"\u002Fresources\u002Ftutorials",path:D,extension:".md",createdAt:E,updatedAt:E},navigation:[{title:F,category:p,categoryIcon:q,path:G},{title:u,category:p,categoryIcon:q,path:D},{title:H,category:p,categoryIcon:q,path:I}],prev:{title:F,path:G},next:{title:H,path:I}}],fetch:{},mutations:void 0}}("text","element","span","token","code","\n","type","punctuation","p","\n  ","property","operator",":"," ","string","Tutorials","mdi-school",",",".","em","Deploy artifacts to digiwf-engine?",2,"artifact-deployment-bpmn-dmn-json-schema-and-process-configurations","Artifact deployment (bpmn, dmn, json schema and process configurations)","nuxt-link","\u002Fresources\u002Fdocumentation\u002Fconcept\u002Feventbustopics"," and "," with the value ",", ","\u002Fresources\u002Ftutorials\u002Fdeploy-artifacts-to-digiwf-engine","2022-07-22T07:53:26.302Z","Tutorials and Guides","\u002Fresources\u002Ftutorials\u002Foverview","How to communicate with digiwf-engine?","\u002Fresources\u002Ftutorials\u002Fkafka-topics-tutorial")));